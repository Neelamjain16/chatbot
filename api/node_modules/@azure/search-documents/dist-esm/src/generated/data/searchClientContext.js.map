{"version":3,"file":"searchClientContext.js","sourceRoot":"","sources":["../../../../src/generated/data/searchClientContext.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AAGjD,gBAAgB;AAChB,MAAM,OAAO,mBAAoB,SAAQ,UAAU,CAAC,aAAa;IAK/D;;;;;;OAMG;IACH,YACE,QAAgB,EAChB,SAAiB,EACjB,UAA8B,EAC9B,OAAoC;QAEpC,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QACD,IAAI,SAAS,KAAK,SAAS,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;SAC/C;QACD,IAAI,UAAU,KAAK,SAAS,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;SAChD;QAED,0CAA0C;QAC1C,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;SACd;QACD,MAAM,QAAQ,GAA+B;YAC3C,kBAAkB,EAAE,iCAAiC;SACtD,CAAC;QAEF,MAAM,mBAAmB,iDACpB,QAAQ,GACR,OAAO,KACV,OAAO,EAAE,OAAO,CAAC,QAAQ,IAAI,mCAAmC,GACjE,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAC3B,wBAAwB;QACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;CACF","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport { ApiVersion20200630, SearchClientOptionalParams } from \"./models\";\n\n/** @internal */\nexport class SearchClientContext extends coreClient.ServiceClient {\n  endpoint: string;\n  indexName: string;\n  apiVersion: ApiVersion20200630;\n\n  /**\n   * Initializes a new instance of the SearchClientContext class.\n   * @param endpoint The endpoint URL of the search service.\n   * @param indexName The name of the index.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    endpoint: string,\n    indexName: string,\n    apiVersion: ApiVersion20200630,\n    options?: SearchClientOptionalParams\n  ) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n    if (indexName === undefined) {\n      throw new Error(\"'indexName' cannot be null\");\n    }\n    if (apiVersion === undefined) {\n      throw new Error(\"'apiVersion' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: SearchClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      baseUri: options.endpoint || \"{endpoint}/indexes('{indexName}')\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.endpoint = endpoint;\n    this.indexName = indexName;\n    this.apiVersion = apiVersion;\n  }\n}\n"]}