{"version":3,"file":"searchServiceClient.js","sourceRoot":"","sources":["../../../../src/generated/service/searchServiceClient.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,KAAK,UAAU,MAAM,oBAAoB,CAAC;AACjD,OAAO,EACL,eAAe,EACf,YAAY,EACZ,aAAa,EACb,eAAe,EACf,WAAW,EACZ,MAAM,cAAc,CAAC;AAQtB,OAAO,KAAK,UAAU,MAAM,qBAAqB,CAAC;AAClD,OAAO,KAAK,OAAO,MAAM,kBAAkB,CAAC;AAC5C,OAAO,EAAE,0BAA0B,EAAE,MAAM,8BAA8B,CAAC;AAQ1E,gBAAgB;AAChB,MAAM,OAAO,mBAAoB,SAAQ,0BAA0B;IACjE;;;;;OAKG;IACH,YACE,QAAgB,EAChB,UAA8B,EAC9B,OAA2C;QAE3C,KAAK,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED;;;OAGG;IACH,oBAAoB,CAClB,OAA+D;QAE/D,OAAO,IAAI,CAAC,oBAAoB,CAC9B,EAAE,OAAO,EAAE,EACX,iCAAiC,CAClC,CAAC;IACJ,CAAC;CAOF;AACD,2BAA2B;AAC3B,MAAM,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAE3E,MAAM,iCAAiC,GAA6B;IAClE,IAAI,EAAE,eAAe;IACrB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE,OAAO,CAAC,iBAAiB;SACtC;QACD,OAAO,EAAE;YACP,UAAU,EAAE,OAAO,CAAC,WAAW;SAChC;KACF;IACD,eAAe,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IACxC,aAAa,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC;IACpC,gBAAgB,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC;IACrC,UAAU;CACX,CAAC","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport {\n  DataSourcesImpl,\n  IndexersImpl,\n  SkillsetsImpl,\n  SynonymMapsImpl,\n  IndexesImpl\n} from \"./operations\";\nimport {\n  DataSources,\n  Indexers,\n  Skillsets,\n  SynonymMaps,\n  Indexes\n} from \"./operationsInterfaces\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport { SearchServiceClientContext } from \"./searchServiceClientContext\";\nimport {\n  SearchServiceClientOptionalParams,\n  ApiVersion20200630,\n  SearchServiceClientGetServiceStatisticsOptionalParams,\n  SearchServiceClientGetServiceStatisticsResponse\n} from \"./models\";\n\n/** @internal */\nexport class SearchServiceClient extends SearchServiceClientContext {\n  /**\n   * Initializes a new instance of the SearchServiceClient class.\n   * @param endpoint The endpoint URL of the search service.\n   * @param apiVersion Api Version\n   * @param options The parameter options\n   */\n  constructor(\n    endpoint: string,\n    apiVersion: ApiVersion20200630,\n    options?: SearchServiceClientOptionalParams\n  ) {\n    super(endpoint, apiVersion, options);\n    this.dataSources = new DataSourcesImpl(this);\n    this.indexers = new IndexersImpl(this);\n    this.skillsets = new SkillsetsImpl(this);\n    this.synonymMaps = new SynonymMapsImpl(this);\n    this.indexes = new IndexesImpl(this);\n  }\n\n  /**\n   * Gets service level statistics for a search service.\n   * @param options The options parameters.\n   */\n  getServiceStatistics(\n    options?: SearchServiceClientGetServiceStatisticsOptionalParams\n  ): Promise<SearchServiceClientGetServiceStatisticsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getServiceStatisticsOperationSpec\n    );\n  }\n\n  dataSources: DataSources;\n  indexers: Indexers;\n  skillsets: Skillsets;\n  synonymMaps: SynonymMaps;\n  indexes: Indexes;\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getServiceStatisticsOperationSpec: coreClient.OperationSpec = {\n  path: \"/servicestats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceStatistics\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"]}